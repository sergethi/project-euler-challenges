# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


# 1, 1, 2, 3, 5 .... 4M

# value1 = 1
# value2 = 1

# nextValue = value1 + value2  => 2
# if nextValue is even add to sum

# value1 = value2  => 1
# value2 = nextValue => 2

# nextValue = value1 + value2  => 3
# value1 = value2  => 2
# value2 = nextValue => 3


def evenFibonacciNumbers():
    fib1 = 1
    fib2 = 1
    evenTotal = 0
    nextFib = 0
    while nextFib < 4000000:
        nextFib = fib1 + fib2
        fib1 = fib2
        fib2 = nextFib
        if nextFib % 2 == 0:
            evenTotal += nextFib

    return evenTotal
print(evenFibonacciNumbers())
#1, 1, 2, 3, 5, 8, 13, 21, 34, 55,
# fib1 =34
# fib2 = 55
# nextfib = 55
# total= 44